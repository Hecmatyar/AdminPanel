@using test.Models
@model RegisterViewModel
@{
    ViewBag.Title = "Выполнить вход";
}

<h2>@ViewBag.Title.</h2>
<div class="row">
    <div class="col-md-8">
        <section id="loginForm">
            @using (Html.BeginForm("Register", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post,
                new { enctype = "multipart/form-data", @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <h4>Используйте локальную учетную запись для входа.</h4>
                <hr />
                @Html.ValidationSummary(true)

                <fieldset>
                    <div class="form-group">
                        @Html.LabelFor(m => m.UserPhoto, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            <label for="file-upload" class="custom-file-upload">
                                <img id="preview" style="width: 150px; height:150px; border: 1px solid #999; cursor:pointer;" />
                            </label>
                            <input id="file-upload" type="file" name="UserPhoto" accept=".png,.jpg,.jpeg,.gif,.tif" style="display:none;" />
                        </div>
                    </div>
                </fieldset>
                <div class="form-group">
                    @Html.LabelFor(m => m.UserName, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
                        <span id="NameIsUsing" style="display:none;">Имя занято</span>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.UserPassword, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.PasswordFor(m => m.UserPassword, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.UserPassword, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.UserEmail, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.UserEmail, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.UserEmail, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <div class="checkbox">
                            @Html.CheckBoxFor(m => m.RememberMe)
                            @Html.LabelFor(m => m.RememberMe)
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Выполнить вход" class="btn btn-default" />
                    </div>
                </div>
                <p>
                    @Html.ActionLink("Регистрация нового пользователя", "Register")
                </p>
            }
        </section>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>

        $("#file-upload").change(function () {
            preview(this);
        });
        function preview(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#preview').attr('src', e.target.result);
                }
                reader.readAsDataURL(input.files[0]);
            }
        }


        var cancellTimeOut;
        $("#UserName").on('input', function () {            
            isEngaged(this.value);
        });
        function isEngaged(name) {
            clearTimeout(cancellTimeOut)
            cancellTimeOut = setTimeout(function () {
                $.ajax({
                    url: 'NameIsEngaged',
                    data: { name: name }
                }).done(function (data) {                    
                    if (data == "False") $('#NameIsUsing').show();
                    else $('#NameIsUsing').hide();
                });
            }, 1000);
        }
    </script>
}